from __future__ import print_function, division

import os, sys, ROOT, argparse, pdb, tmGeneralUtils

inputArgumentsParser = argparse.ArgumentParser(description='Create datacard template and fill in all data-dependent systematics (but not the MC-dependent systematics).')
inputArgumentsParser.add_argument('--outputDirectory', default="analysis/dataCards", help='Path to directory in which to store data card template.',type=str)
inputArgumentsParser.add_argument('--outputPrefix', required=True, help='Prefix to output data card template.',type=str)
inputArgumentsParser.add_argument('--systematicsParametersFile', required=True, help='Path to file containing data systematics.',type=str)
inputArguments = inputArgumentsParser.parse_args()

systematicsParameters = tmGeneralUtils.getConfigurationFromFile(inputArguments.systematicsParametersFile)

normUncertaintyString = "{onePlusFracUncNorm:5.3f}".format(onePlusFracUncNorm=(1+fractionalUncertainty_normEvents))
shapeUncertaintyString = "{onePlusFracUncShape:5.3f}".format(onePlusFracUncShape=(1+fractionalUncertainty_Shape))
scalingUncertaintyString_4Jets = "{onePlusFracUncScaling_4Jets:5.3f}".format(onePlusFracUncScaling_4Jets=(1+inputArguments.sTScalingFractionalUncertainty_4Jets))
scalingUncertaintyString_5Jets = "{onePlusFracUncScaling_5Jets:5.3f}".format(onePlusFracUncScaling_5Jets=(1+inputArguments.sTScalingFractionalUncertainty_5Jets))
scalingUncertaintyString_geq6Jets = "{onePlusFracUncScaling_geq6Jets:5.3f}".format(onePlusFracUncScaling_geq6Jets=(1+inputArguments.sTScalingFractionalUncertainty_geq6Jets))
    
dataCardTemplateFileObject = open('{outputDirectory}/{prefix}_dataCardTemplate.txt'.format(outputDirectoryPath=outputDirectoryPath), 'w')
dataCardTemplateFileObject.write("# Generated by the script \"createDataCardTemplate.py\"\n")
dataCardTemplateFileObject.write("imax 6  number of channels\n")
dataCardTemplateFileObject.write("jmax 1  number of backgrounds\n")
dataCardTemplateFileObject.write("kmax 7  number of nuisance parameters (sources of systematic uncertainties)\n")
dataCardTemplateFileObject.write("------------\n")
dataCardTemplateFileObject.write("bin            sub4Jets     main4Jets    sub5Jets     main5Jets    sub6Jets     main6Jets\n")
dataCardTemplateFileObject.write("observation    {s4:<11.3f}  {m4:<11.3f}  {s5:<11.3f}  {m5:<11.3f}  {s6:<11.3f}  {m6:.3f}\n".format(s4=systematicsParameters["expected_nEventsInSubordinateSignalRegion_4Jets"], m4=systematicsParameters["expected_nEventsInMainSignalRegion_4Jets"], s5=systematicsParameters["expected_nEventsInSubordinateSignalRegion_5Jets"], m5=systematicsParameters["expected_nEventsInMainSignalRegion_5Jets"], s6=systematicsParameters["expected_nEventsInSubordinateSignalRegion_6Jets"], m6=systematicsParameters["expected_nEventsInMainSignalRegion_6Jets"])) # temporary, while data is unblinded -- useful for expected limit plots
dataCardTemplateFileObject.write("------------\n")
dataCardTemplateFileObject.write("bin                  sub4Jets      sub4Jets      main4Jets     main4Jets      sub5Jets      sub5Jets      main5Jets     main5Jets      sub6Jets      sub6Jets      main6Jets     main6Jets\n")
dataCardTemplateFileObject.write("process              t7Wg          qcd           t7Wg          qcd            t7Wg          qcd           t7Wg          qcd            t7Wg          qcd           t7Wg          qcd\n")
dataCardTemplateFileObject.write("process              0             1             0             1              0             1             0             1              0             1             0             1\n")
dataCardTemplateFileObject.write("rate                 MC_SUBORD_4   {s4:<11.3f}   MC_MN_REG_4   {m4:<11.3f}    MC_SUBORD_5   {s5:<11.3f}   MC_MN_REG_5   {m5:<11.3f}    MC_SUBORD_6   {s6:<11.3f}   MC_MN_REG_6   {m6:.3f}\n".format(s4=systematicsParameters["expected_nEventsInSubordinateSignalRegion_4Jets"], m4=systematicsParameters["expected_nEventsInMainSignalRegion_4Jets"], s5=systematicsParameters["expected_nEventsInSubordinateSignalRegion_5Jets"], m5=systematicsParameters["expected_nEventsInMainSignalRegion_5Jets"], s6=systematicsParameters["expected_nEventsInSubordinateSignalRegion_6Jets"], m6=systematicsParameters["expected_nEventsInMainSignalRegion_6Jets"]))
dataCardTemplateFileObject.write("------------\n")
dataCardTemplateFileObject.write("normEvents   lnN     -             {nUS}         -             {nUS}          -             {nUS}         -             {nUS}          -             {nUS}         -             {nUS}\n".format(nUS=normUncertaintyString))
dataCardTemplateFileObject.write("shape        lnN     -             {shS}         -             {shS}          -             {shS}         -             {shS}          -             {shS}         -             {shS}\n".format(shS=shapeUncertaintyString))
dataCardTemplateFileObject.write("scaling      lnN     -             {sU4}         -             {sU4}          -             {sU5}         -             {sU5}          -             {sU6}         -             {sU6}\n".format(sU4=scalingUncertaintyString_4Jets, sU5=scalingUncertaintyString_5Jets, sU6=scalingUncertaintyString_geq6Jets))
dataCardTemplateFileObject.write("rho          lnN     -             1.100         -             1.050          -             1.100         -             1.050          -             1.100         -             1.050\n") # Assuming a 5 percent uncertainty on rho in the last few bins
dataCardTemplateFileObject.write("jetE         lnN     1.050         -             1.050         -              1.050         -             1.050         -              1.050         -             1.050         -\n")
dataCardTemplateFileObject.write("lumi         lnN     1.050         -             1.050         -              1.050         -             1.050         -              1.050         -             1.050         -\n")
dataCardTemplateFileObject.write("MCStats      lnN     SU_S4         -             SU_M4         -              SU_S5         -             SU_M5         -              SU_S6         -             SU_M6         -\n")
dataCardTemplateFileObject.close()
